(#t #t #f #t #t #t #t #t #t #t #t #t #t #t #t #t)
(#t #t #t #t #f #f #f #f #f #f #t #t #t #t #t #t)
(#t #t #t #t #f #f #f #f #f #t #t #t #t #t #t #t)
(#t #t #t #t #f #f #f #f #f #t #t #t #t #t #t #t)
(#f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f)
(#t #t #t #t #f #f #f #f #f #f #t #t #t #t #t #t)
(#t #t #t #t #f #f #f #f #f #f #t #t #t #t #t #t)
(#t #t #t #t #f #f #f #f #f #f #t #t #t #t #t #t)
(#t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #f)
(#t #t #t #t #f #f #f #f #f #f #t #t #t #t #t #t)
(#t #t #t #t #f #f #f #f #f #f #t #t #t #t #t #t)
(#t #t #t #t #f #f #f #f #f #f #t #t #t #t #t #t)
(#f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f)
Slam test:number->string
Slam test:reverse
Slam test:length
Slam test:apply
Slam test:append
Slam test:boolean?
Slam test:bytevector?
Slam test:eof-object?
Slam test:complex?
Slam test:real?
Slam test:rational?
Slam test:integer?
Slam test:exact?
Slam test:inexact?
Slam test:inexact
Slam test:exact
Slam test:char?
Slam test:number?
Slam test:procedure?
Slam test:string?
Slam test:symbol?
Slam test:vector?
Slam test:not
Slam test:pair?
Slam test:list
Slam test:list-set!
Slam test:list-copy
Slam test:zero?
Slam test:negative?
Slam test:positive?
Slam test:odd?
Slam test:even?
Slam test:abs
Slam test:boolean=?
Slam test:symbol=?
Slam test:<
Slam test:>
Slam test:<=
Slam test:>=
Slam test:+
Slam test:-
Slam test:/
Slam test:*
Slam test:max
Slam test:min
Slam test:modulo
Slam test:gcd
Slam test:lcm
Slam test:remainder
Slam test:quotient
Slam test:cdr
Slam test:car
Slam test:set-car!
Slam test:set-cdr!
Slam test:cons
Slam test:eq?
Slam test:eqv?
Slam test:equal?
Slam test:null?
Slam test:string<?
Slam test:char=?
Slam test:list-ref
Slam test:list-tail
Slam test:assq
Slam test:member
Slam test:for-each
Slam test:string->list
Slam test:newline
Slam test:vector-map
Slam test:vector-for-each
Slam test:string-map
Slam test:string-for-each
Slam test:map
Slam test:list->vector
Slam test:vector-set!
Slam test:vector-ref
Slam test:string-fill!
Slam test:list?
Slam test:equal?
Slam test:vector-length
Slam test:string-length
Slam test:string-set!
Slam test:string-ref
Slam test:vector->list
Slam test:symbol->string
Slam test:string->symbol
Slam test:string->vector
Slam test:vector->string
Slam test:vector-copy
Slam test:vector-fill!
Slam test:vector-copy!
Slam test:vector-append
Slam test:string
Slam test:list->string
Slam test:number->string
Slam test:integer->char
Slam test:char->integer
Slam test:string-copy
Slam test:string-copy!
Slam test:substring
Slam test:string-append
Slam test:vector
Slam test:call/cc
Slam test:values
Slam test:call-with-values
Slam test:dynamic-wind
Slam test:make-parameter
Slam test:flush-output-port
Slam test:peek-char
Slam test:char-ready?
Slam test:truncate
Slam test:exact-integer-sqrt
Slam test:round
Slam test:rationalize
Slam test:floor
Slam test:ceiling
Slam test:floor/
Slam test:floor-quotient
Slam test:floor-remainder
Slam test:truncate/
Slam test:truncate-quotient
Slam test:truncate-remainder
Slam test:imag-part
Slam test:real-part
Slam test:make-rectangular
Slam test:square
Slam test:exact-integer?
Slam test:numerator
Slam test:denominator
Slam test:raise
Slam test:bytevector-length
Slam test:bytevector-copy
Slam test:bytevector-u8-ref
Slam test:bytevector-u8-set!
Slam test:bytevector-copy!
Slam test:bytevector-append
Slam test:utf8->string
Slam test:string->utf8
Slam test:char-alphabetic?
Slam test:char-ci<=?
Slam test:char-ci<?
Slam test:char-ci=?
Slam test:char-ci>=?
Slam test:char-ci>?
Slam test:char-downcase
Slam test:char-foldcase
Slam test:char-lower-case?
Slam test:char-numeric?
Slam test:char-upcase
Slam test:char-upper-case?
Slam test:char-whitespace?
Slam test:digit-value
Slam test:string-ci<=?
Slam test:string-ci<?
Slam test:string-ci=?
Slam test:string-ci>=?
Slam test:string-ci>?
Slam test:string-downcase
Slam test:string-foldcase
Slam test:string-upcase
Slam test:angle
Slam test:imag-part
Slam test:magnitude
Slam test:make-polar
Slam test:make-rectangular
Slam test:real-part
Slam test:call-with-input-file
Slam test:call-with-output-file
Slam test:delete-file
Slam test:file-exists?
Slam test:open-binary-input-file
Slam test:open-binary-output-file
Slam test:open-input-file
Slam test:open-output-file
Slam test:with-input-from-file
Slam test:with-output-to-file
Slam test:acos
Slam test:asin
Slam test:atan
Slam test:cos
Slam test:exp
Slam test:finite?
Slam test:infinite?
Slam test:log
Slam test:nan?
Slam test:sin
Slam test:sqrt
Slam test:tan
Slam test:force
Slam test:make-promise
Slam test:promise?
Slam test:load
Slam test:command-line
Slam test:get-environment-variable
Slam test:get-environment-variables
Slam test:read
Slam test:write
#t#\a(#<closure> . #<closure>)()97391.01/21000000000000000000000000000000000000000000000000000000-11-2i"aaaa"test#()#(#<closure> #<closure> #<closure>)#<record>#<closure>Slam test:display
#ta(#<closure> . #<closure>)()97391.01/21000000000000000000000000000000000000000000000000000000-11-2iaaaatest#()#(#<closure> #<closure> #<closure>)#<record>#<closure>Slam test:write-shared
#t#\a(#<closure> . #<closure>)()97391.01/21000000000000000000000000000000000000000000000000000000-11-2i"aaaa"test#()#(#<closure> #<closure> #<closure>)#<record>#<closure>Slam test:write-simple
#t#\a(#<closure> . #<closure>)()97391.01/21000000000000000000000000000000000000000000000000000000-11-2i"aaaa"test#()#(#<closure> #<closure> #<closure>)#<record>#<closure>Slam test:environment
Slam test:eval
