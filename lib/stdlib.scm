(define (install-primitives man)
  (install-library!
    (make-library
      '(flow primitives)
      '((* . *)
        (+ . +)
        (- . -)
        (/ . /)
        (< . <)
        (<= . <=)
        (= . =)
        (=> . =>)
        (> . >)
        (>= . >=)
        (abs . abs)
        (append . append)
        (apply . apply)
        (assoc . assoc)
        (assq . assq)
        (assv . assv)
        (binary-port? . binary-port?)
        (boolean=? . boolean=?)
        (boolean? . boolean?)
        (bytevector . bytevector)
        (bytevector-append . bytevector-append)
        (bytevector-copy . bytevector-copy)
        (bytevector-copy! . bytevector-copy!)
        (bytevector-length . bytevector-length)
        (bytevector-u8-ref . bytevector-u8-ref)
        (bytevector-u8-set! . bytevector-u8-set!)
        (bytevector? . bytevector?)
        (caar . caar)
        (cadr . cadr)
        (call-with-current-continuation
          .
          call-with-current-continuation)
        (call-with-port . call-with-port)
        (call-with-values . call-with-values)
        (call/cc . call/cc)
        (car . car)
        (cdar . cdar)
        (cddr . cddr)
        (cdr . cdr)
        (ceiling . ceiling)
        (char->integer . char->integer)
        (char-ready? . char-ready?)
        (char? . char?)
        (close-input-port . close-input-port)
        (close-output-port . close-output-port)
        (close-port . close-port)
        (complex? . complex?)
        (cons . cons)
        (current-error-port . current-error-port)
        (current-input-port . current-input-port)
        (current-output-port . current-output-port)
        (denominator . denominator)
        (dynamic-wind . dynamic-wind)
        (else . else)
        (eof-object . eof-object)
        (eof-object? . eof-object?)
        (eq? . eq?)
        (equal? . equal?)
        (eqv? . eqv?)
        (error . error)
        (error-object-irritants . error-object-irritants)
        (error-object-type . error-object-type)
        (error-object-message . error-object-message)
        (error-object? . error-object?)
        (even? . even?)
        (exact . exact)
        (exact-integer-sqrt . exact-integer-sqrt)
        (exact-integer? . exact-integer?)
        (exact? . exact?)
        (expt . expt)
        (features . features)
        (file-error? . file-error?)
        (floor . floor)
        (floor-quotient . floor-quotient)
        (floor-remainder . floor-remainder)
        (floor/ . floor/)
        (flush-output-port . flush-output-port)
        (for-each . for-each)
        (gcd . gcd)
        (get-output-bytevector . get-output-bytevector)
        (get-output-string . get-output-string)
        (include-ci . include-ci)
        (inexact . inexact)
        (inexact? . inexact?)
        (input-port-open? . input-port-open?)
        (input-port? . input-port?)
        (integer->char . integer->char)
        (integer? . integer?)
        (lcm . lcm)
        (length . length)
        (list . list)
        (list->string . list->string)
        (list->vector . list->vector)
        (list-copy . list-copy)
        (list-ref . list-ref)
        (list-set! . list-set!)
        (list-tail . list-tail)
        (list? . list?)
        (make-bytevector . make-bytevector)
        (make-list . make-list)
        (make-parameter . make-parameter)
        (make-string . make-string)
        (make-vector . make-vector)
        (map . map)
        (max . max)
        (member . member)
        (memq . memq)
        (memv . memv)
        (min . min)
        (modulo . modulo)
        (negative? . negative?)
        (newline . newline)
        (not . not)
        (null? . null?)
        (number->string . number->string)
        (number? . number?)
        (numerator . numerator)
        (odd? . odd?)
        (open-input-bytevector . open-input-bytevector)
        (open-input-string . open-input-string)
        (open-output-bytevector . open-output-bytevector)
        (open-output-string . open-output-string)
        (output-port-open? . output-port-open?)
        (output-port? . output-port?)
        (pair? . pair?)
        (peek-char . peek-char)
        (peek-u8 . peek-u8)
        (port? . port?)
        (positive? . positive?)
        (procedure? . procedure?)
        (quotient . quotient)
        (raise . raise)
        (raise-continuable . raise-continuable)
        (rational? . rational?)
        (rationalize . rationalize)
        (read-bytevector . read-bytevector)
        (read-bytevector! . read-bytevector!)
        (read-char . read-char)
        (read-error? . read-error?)
        (read-line . read-line)
        (read-string . read-string)
        (read-u8 . read-u8)
        (real? . real?)
        (remainder . remainder)
        (reverse . reverse)
        (round . round)
        (set-car! . set-car!)
        (set-cdr! . set-cdr!)
        (square . square)
        (string . string)
        (string->list . string->list)
        (string->number . string->number)
        (string->symbol . string->symbol)
        (string->utf8 . string->utf8)
        (string->vector . string->vector)
        (string-append . string-append)
        (string-copy . string-copy)
        (string-copy! . string-copy!)
        (string-fill! . string-fill!)
        (string-for-each . string-for-each)
        (string-length . string-length)
        (string-map . string-map)
        (string-ref . string-ref)
        (string-set! . string-set!)
        (string<=? . string<=?)
        (string<? . string<?)
        (string=? . string=?)
        (string>=? . string>=?)
        (string>? . string>?)
        (string? . string?)
        (substring . substring)
        (char=? . char=?)
        (char<? . char<?)
        (char<=? . char<=?)
        (char>? . char>?)
        (char>=? . char>=?)
        (symbol->string . symbol->string)
        (symbol=? . symbol=?)
        (symbol? . symbol?)
        (syntax-error . syntax-error)
        (textual-port? . textual-port?)
        (truncate . truncate)
        (truncate-quotient . truncate-quotient)
        (truncate-remainder . truncate-remainder)
        (truncate/ . truncate/)
        (u8-ready? . u8-ready?)
        (utf8->string . utf8->string)
        (values . values)
        (vector . vector)
        (vector->list . vector->list)
        (vector->string . vector->string)
        (vector-append . vector-append)
        (vector-copy . vector-copy)
        (vector-copy! . vector-copy!)
        (vector-fill! . vector-fill!)
        (vector-for-each . vector-for-each)
        (vector-length . vector-length)
        (vector-map . vector-map)
        (vector-ref . vector-ref)
        (vector-set! . vector-set!)
        (vector? . vector?)
        (with-exception-handler . with-exception-handler)
        (write-bytevector . write-bytevector)
        (write-char . write-char)
        (write-string . write-string)
        (write-u8 . write-u8)
        (zero? . zero?)
        (char-alphabetic? . char-alphabetic?)
        (char-ci<=? . char-ci<=?)
        (char-ci<? . char-ci<?)
        (char-ci=? . char-ci=?)
        (char-ci>=? . char-ci>=?)
        (char-ci>? . char-ci>?)
        (char-downcase . char-downcase)
        (char-foldcase . char-foldcase)
        (char-lower-case? . char-lower-case?)
        (char-numeric? . char-numeric?)
        (char-upcase . char-upcase)
        (char-upper-case? . char-upper-case?)
        (char-whitespace? . char-whitespace?)
        (digit-value . digit-value)
        (string-ci<=? . string-ci<=?)
        (string-ci<? . string-ci<?)
        (string-ci=? . string-ci=?)
        (string-ci>=? . string-ci>=?)
        (string-ci>? . string-ci>?)
        (string-downcase . string-downcase)
        (string-foldcase . string-foldcase)
        (string-upcase . string-upcase)
        (angle . angle)
        (magnitude . magnitude)
        (imag-part . imag-part)
        (make-polar . make-polar)
        (make-rectangular . make-rectangular)
        (real-part . real-part)
        (caaaar . caaaar)
        (caaadr . caaadr)
        (caaar . caaar)
        (caadar . caadar)
        (caaddr . caaddr)
        (caadr . caadr)
        (cadaar . cadaar)
        (cadadr . cadadr)
        (cadar . cadar)
        (caddar . caddar)
        (cadddr . cadddr)
        (caddr . caddr)
        (cdaaar . cdaaar)
        (cdaadr . cdaadr)
        (cdaar . cdaar)
        (cdadar . cdadar)
        (cdaddr . cdaddr)
        (cdadr . cdadr)
        (cddaar . cddaar)
        (cddadr . cddadr)
        (cddar . cddar)
        (cdddar . cdddar)
        (cddddr . cddddr)
        (cdddr . cdddr)
        (eval . eval)
        (environment . environment)
        (call-with-input-file . call-with-input-file)
        (call-with-output-file . call-with-output-file)
        (delete-file . delete-file)
        (file-exists? . file-exists?)
        (open-binary-input-file . open-binary-input-file)
        (open-binary-output-file
          .
          open-binary-output-file)
        (open-input-file . open-input-file)
        (open-output-file . open-output-file)
        (with-input-from-file . with-input-from-file)
        (with-output-to-file . with-output-to-file)
        (acos . acos)
        (asin . asin)
        (atan . atan)
        (cos . cos)
        (exp . exp)
        (finite? . finite?)
        (infinite? . infinite?)
        (log . log)
        (nan? . nan?)
        (sin . sin)
        (sqrt . sqrt)
        (tan . tan)
        (force . force)
        (make-promise . make-promise)
        (promise? . promise?)
        (load . load)
        (command-line . command-line)
        (emergency-exit . emergency-exit)
        (exit . exit)
        (get-environment-variable
          .
          get-environment-variable)
        (get-environment-variables
          .
          get-environment-variables)
        (read . read)
        (interaction-environment
          .
          interaction-environment)
        (current-jiffy . current-jiffy)
        (current-second . current-second)
        (jiffies-per-second . jiffies-per-second)
        (display . display)
        (write . write)
        (write-shared . write-shared)
        (write-simple . write-simple)
        (exact->inexact . exact->inexact)
        (inexact->exact . inexact->exact)
        (null-environment . null-environment)
        (scheme-report-environment
          .
          scheme-report-environment)
        (bound-identifier=? . bound-identifier=?)
        (identifier? . identifier?)
        (free-identifier=? . free-identifier=?)
        (datum->syntax . datum->syntax)
        (generate-temporaries . generate-temporaries)
        (make-record-type . make-record-type)
        (record? . record?)
        (record-ref . record-ref)
        (record-set! . record-set!)
        (record-accessor . record-accessor)
        (record-constructor . record-constructor)
        (make-record . make-record)
        (cons* . cons*)
        (%make-promise . %make-promise)
        (make-ident . make-ident)
        (add-feature . add-feature))
      '())
    man))
(define (install-sys man)
  (install-library!
    (make-library
      '(flow sys)
      '((ADD primcall ADD)
        (SUB primcall SUB)
        (DIV primcall DIV)
        (MUL primcall MUL)
        (MOD primcall MOD)
        (LT primcall LT)
        (GT primcall GT)
        (EQ primcall EQ)
        (LTE primcall LTE)
        (GTE primcall GTE)
        (NUM_EQ primcall NUM_EQ)
        (EQ primcall EQ)
        (GUARD primcall GUARD)
        (LOAD primcall LOAD)
        (STORE primcall STORE)
        (LOAD_CHAR primcall LOAD_CHAR)
        (STORE_CHAR primcall STORE_CHAR)
        (ALLOC primcall ALLOC)
        (INTEGER_CHAR primcall INTEGER_CHAR)
        (CHAR_INTEGER primcall CHAR_INTEGER)
        (INEXACT primcall INEXACT)
        (EXACT primcall EXACT)
        (FOREIGN_CALL primcall FOREIGN_CALL)
        (APPLY primcall APPLY)
        (CALLCC primcall CALLCC)
        (CALLCC_RESUME primcall CALLCC_RESUME)
        (WRITE primcall WRITE))
      '())
    man))
